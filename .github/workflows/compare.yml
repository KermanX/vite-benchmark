name: Compare

on:
  workflow_dispatch:
    inputs:
      base_vite_repo:
        description: 'compare baseline repository'
        required: true
        type: string
        default: 'vitejs/vite'
      base_vite_ref:
        description: 'compare baseline ref'
        required: true
        type: string
        default: 'heads/main'
      to_vite_repo:
        description: 'compare target repository'
        required: true
        type: string
      to_vite_ref:
        description: 'compare target ref'
        required: true
        type: string
jobs:
  prepare_compare_benchmark:
    runs-on: ubuntu-latest
    outputs:
      from_vite_repo: ${{ steps.calc_base_workflow_inputs.outputs.from_vite_repo }}
      from_vite_sha: ${{ steps.calc_base_workflow_inputs.outputs.from_vite_sha }}
      to_vite_repo: ${{ steps.calc_base_workflow_inputs.outputs.to_vite_repo }}
      to_vite_sha: ${{ steps.calc_base_workflow_inputs.outputs.to_vite_sha }}
    steps:
      - uses: actions/github-script@v6
        id: calc_base_workflow_inputs
        name: Display base benchmark job
        with:
          script: |
            const { base_vite_repo, base_vite_ref, to_vite_repo, to_vite_ref } = context.payload.inputs
            let baseSha = base_vite_ref
            let toSha = to_vite_ref
            if (base_vite_ref.startsWith('heads/') || base_vite_ref.startsWith('tags/')) {
              const [owner, repo] = base_vite_repo.split('/')
              const { data: toData } = await github.rest.git.getRef({
                owner,
                repo,
                ref: base_vite_ref,
                })
              baseSha = toData.object.sha
            }

            if (to_vite_ref.startsWith('heads/') || to_vite_ref.startsWith('tags/')) {
              const [owner, repo] = to_vite_repo.split('/')
              const { data: toData } = await github.rest.git.getRef({
                owner,
                repo,
                ref: to_vite_ref,
                })
              toSha = toData.object.sha
            }

            core.setOutput("from_vite_repo", base_vite_repo)
            core.setOutput("from_vite_sha", baseSha)
            core.setOutput("to_vite_repo", to_vite_repo)
            core.setOutput("to_vite_sha", toSha)
  call_base_benchmark_workflow:
    uses: ./.github/workflows/benchmark.yml
    secrets: inherit
    needs: [prepare_compare_benchmark]
    with:
      vite_repo: ${{ needs.prepare_compare_benchmark.outputs.from_vite_repo }}
      vite_sha: ${{ needs.prepare_compare_benchmark.outputs.from_vite_sha }}
      upload_pages_data: false
      upload_artifact: true
  call_to_benchmark_workflow:
    uses: ./.github/workflows/benchmark.yml
    secrets: inherit
    needs: [prepare_compare_benchmark]
    with:
      vite_repo: ${{ needs.prepare_compare_benchmark.outputs.to_vite_repo }}
      vite_sha: ${{ needs.prepare_compare_benchmark.outputs.to_vite_sha }}
      upload_pages_data: false
      upload_artifact: true
  post_call_workflow:
    needs: [call_base_benchmark_workflow, call_to_benchmark_workflow]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        name: Report benchmark comparison link
        with:
          script: |
            const base = 'https://fi3ework.github.io/vite-benchmark-report/compare'
            // artifact name should sync with ./benchmark.yml
            const { from_vite_repo, from_vite_sha, to_vite_repo, to_vite_sha } = context.payload.inputs
            const baseRepoName = from_vite_repo.split('/')[1].join('___')
            const baseShortSha = from_vite_sha.slice(0, 7)
            const baseArtifactName = `benchmark-artifact-${baseRepoName}-${baseShortSha}`

            const toRepoName = to_vite_repo.split('/')[1].join('___')
            const toShortSha = to_vite_sha.slice(0, 7)
            const toArtifactName = `benchmark-artifact-${toRepoName}-${toShortSha}`

            const link = `${base}?base=${toRepoName}&to=${toArtifactName}`
            core.info(`Benchmark report link: ${link}`)
