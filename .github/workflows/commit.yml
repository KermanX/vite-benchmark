name: Commit

on:
  workflow_dispatch:
    inputs:
      vite_repo:
        description: 'commit repository'
        required: true
        type: string
        default: 'vitejs/vite'
      vite_ref:
        description: 'commit ref'
        required: true
        type: string
        default: 'heads/main'
jobs:
  prepare_compare_benchmark:
    runs-on: ubuntu-latest
    outputs:
      vite_repo: ${{ steps.calc_workflow_inputs.outputs.vite_repo }}
      vite_sha: ${{ steps.calc_workflow_inputs.outputs.vite_sha }}
    steps:
      - uses: actions/github-script@v6
        id: calc_workflow_inputs
        name: Calculate benchmark inputs
        with:
          script: |
            const { vite_repo, vite_ref } = context.payload.inputs
            let sha = vite_ref
            if (vite_ref.startsWith('heads/') || vite_ref.startsWith('tags/')) {
              const [owner, repo] = vite_repo.split('/')
              const { data } = await github.rest.git.getRef({
                owner,
                repo,
                ref: vite_ref,
              })
              sha = data.object.sha
            }

            core.setOutput("vite_repo", vite_repo)
            core.setOutput("vite_sha", sha)
  call_benchmark_workflow:
    uses: ./.github/workflows/benchmark.yml
    secrets: inherit
    needs: [prepare_compare_benchmark]
    with:
      vite_repo: ${{ needs.prepare_compare_benchmark.outputs.vite_repo }}
      vite_sha: ${{ needs.prepare_compare_benchmark.outputs.vite_sha }}
      upload_pages_data: false
      upload_release: true
  post_call_workflow:
    needs: [prepare_compare_benchmark, call_benchmark_workflow]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        name: Report benchmark comparison link
        with:
          script: |
            const base = 'https://fi3ework.github.io/vite-benchmark/commit'
            // release name should sync with ./benchmark.yml
            const { vite_repo } = context.payload.inputs
            const repoName = vite_repo.split('/').join('@')
            const shortSha = '${{ needs.prepare_compare_benchmark.outputs.vite_sha }}'.slice(0, 7)
            const releaseTag = `${repoName}@${shortSha}`
            const link = `${base}?sha=${releaseTag}`
            core.info(`Benchmark report link: ${link}`)
